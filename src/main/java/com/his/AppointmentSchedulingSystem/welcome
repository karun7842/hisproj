package his.welcome;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class WelcomePage {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            // Apply Nimbus Look and Feel
            try {
                for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (Exception e) {
                System.err.println("Nimbus Look and Feel not applied. Falling back to default.");
            }

            JFrame frame = new JFrame("Hospital Information System");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(900, 700);
            frame.setLocationRelativeTo(null); // Center the window

            // Animated background panel
            AnimatedBackgroundPanel backgroundPanel = new AnimatedBackgroundPanel("src/main/java/assets/welcome.jpg");
            backgroundPanel.setLayout(new BorderLayout());

            // Welcome Label
            JLabel welcomeLabel = new JLabel("Welcome to Hospital Information System", SwingConstants.CENTER);
            welcomeLabel.setFont(new Font("Serif", Font.BOLD, 30));
            welcomeLabel.setForeground(Color.WHITE);
            welcomeLabel.setOpaque(false);
            backgroundPanel.add(welcomeLabel, BorderLayout.NORTH);

            // Menu Bar
            JMenuBar menuBar = createMenuBar(frame);
            frame.setJMenuBar(menuBar);

            // Add the background panel
            frame.add(backgroundPanel);
            frame.setVisible(true);
        });
    }

    private static JMenuBar createMenuBar(JFrame frame) {
        JMenuBar menuBar = new JMenuBar();
        menuBar.setBackground(new Color(0, 102, 204)); // Stylish blue color for the menu bar

        // Registration Menu
        JMenu registrationMenu = new JMenu("Registration");
        registrationMenu.setForeground(Color.WHITE);
        JMenuItem patientReg = new JMenuItem("Patient Registration");
        JMenuItem doctorReg = new JMenuItem("Doctor Registration");

        registrationMenu.add(patientReg);
        registrationMenu.add(doctorReg);

        // Appointments Menu
        JMenu appointmentsMenu = new JMenu("Appointments");
        appointmentsMenu.setForeground(Color.WHITE);
        JMenuItem createAppt = new JMenuItem("Create Appointment");
        JMenuItem rescheduleAppt = new JMenuItem("Reschedule Appointment");

        appointmentsMenu.add(createAppt);
        appointmentsMenu.add(rescheduleAppt);

        // Browser Menu
        JMenu browserMenu = new JMenu("Browser");
        browserMenu.setForeground(Color.WHITE);
        JMenuItem searchPatient = new JMenuItem("Search Patient");
        JMenuItem searchDoctor = new JMenuItem("Search Doctor");

        browserMenu.add(searchPatient);
        browserMenu.add(searchDoctor);

        // Add menus to the menu bar
        menuBar.add(registrationMenu);
        menuBar.add(appointmentsMenu);
        menuBar.add(browserMenu);

        // Action Listeners
        patientReg.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Patient Registration clicked."));
        doctorReg.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Doctor Registration clicked."));
        createAppt.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Create Appointment clicked."));
        rescheduleAppt.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Reschedule Appointment clicked."));
        searchPatient.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Search Patient clicked."));
        searchDoctor.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Search Doctor clicked."));

        return menuBar;
    }
}

// Custom JPanel for animated background
class AnimatedBackgroundPanel extends JPanel {
    private Image backgroundImage;
    private int xPosition = 0;
    private int speed = 1; // Speed of movement

    public AnimatedBackgroundPanel(String imagePath) {
        this.backgroundImage = new ImageIcon(imagePath).getImage();

        // Timer for animation
        Timer timer = new Timer(20, e -> {
            xPosition += speed;
            if (xPosition > getWidth()) {
                xPosition = -backgroundImage.getWidth(null);
            }
            repaint();
        });
        timer.start();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (backgroundImage != null) {
            // Scale the image to fit the window size
            g.drawImage(backgroundImage, xPosition, 0, getWidth(), getHeight(), this);
            g.drawImage(backgroundImage, xPosition - getWidth(), 0, getWidth(), getHeight(), this);
        }
    }
}
